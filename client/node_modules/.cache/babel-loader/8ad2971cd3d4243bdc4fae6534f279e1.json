{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarthak\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux'; // import { createPost } from '../../api';\n\nimport { createPost, updatePost } from '../../actions/posts'; // import { updatePost } from '../../../../server/controllers/posts';\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setcurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id == currentId) : null);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const dispatch = useDispatch();\n\n  const clear = () => {};\n\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Creating a post\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    varient: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    varient: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    varient: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    varient: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primay\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Submit\", ' '), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Clear\", ' ')));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setcurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","dispatch","clear","classes","handleSubmit","e","preventDefault","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"sources":["C:/Users/Sarthak/Desktop/project/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\n// import { createPost } from '../../api';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n// import { updatePost } from '../../../../server/controllers/posts';\r\n\r\nconst Form = ({ currentId, setcurrentId }) => {\r\n  const [postData, setPostData] = useState({\r\n    creator: '',\r\n    title: '',\r\n    message: '',\r\n    tags: '',\r\n    selectedFile: '',\r\n  });\r\n\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id == currentId) : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clear = () => {};\r\n  const classes = useStyles();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">Creating a post</Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          varient=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          varient=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          varient=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          varient=\"outlined\"\r\n          label=\"Tags\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primay\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit{' '}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear{' '}\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}