{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarthak\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './input';\nimport Icon from './icon';\nimport { useDispatch } from 'react-redux';\nimport { gapi } from 'gapi-script';\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from '../../actions/auth';\nconst initialstate = {\n  FirstName: '',\n  LastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  gapi.load('client:auth2', () => {\n    gapi.client.init({\n      clientId: '427947890125-c6ik35t8poj23mchm1tad4k5h6fdivoa.apps.googleusercontent.com',\n      plugin_name: 'chat',\n      scope: 'https://www.googleapis.com/auth/gmail.labels'\n    });\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formdata, setFormdata] = useState(initialstate);\n  const classes = useStyles();\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(formdata, history));\n    } else {\n      dispatch(signin(formdata, history));\n    }\n  };\n\n  const handleChange = e => {\n    // e.preventDefault();\n    setFormdata({ ...formdata,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log('Google sign in was unsuccessful');\n  };\n\n  const switchMode = () => {\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"427947890125-c6ik35t8poj23mchm1tad4k5h6fdivoa.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 28\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, isSignup ? 'Already have an account? Sign In' : 'Create an account, Sign Up'))))));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useStyles","LockOutlinedIcon","Input","Icon","useDispatch","gapi","useHistory","signin","signup","initialstate","FirstName","LastName","email","password","confirmPassword","Auth","load","client","init","clientId","plugin_name","scope","history","dispatch","showPassword","setShowPassword","isSignup","setIsSignup","formdata","setFormdata","classes","handleShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","switchMode","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"sources":["C:/Users/Sarthak/Desktop/project/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport useStyles from './styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from './input';\r\nimport Icon from './icon';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gapi } from 'gapi-script';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { signin, signup } from '../../actions/auth';\r\n\r\nconst initialstate = {\r\n  FirstName: '',\r\n  LastName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\n\r\nconst Auth = () => {\r\n  gapi.load('client:auth2', () => {\r\n    gapi.client.init({\r\n      clientId:\r\n        '427947890125-c6ik35t8poj23mchm1tad4k5h6fdivoa.apps.googleusercontent.com',\r\n      plugin_name: 'chat',\r\n      scope: 'https://www.googleapis.com/auth/gmail.labels',\r\n    });\r\n  });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [formdata, setFormdata] = useState(initialstate);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isSignup) {\r\n      dispatch(signup(formdata, history));\r\n    } else {\r\n      dispatch(signin(formdata, history));\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    // e.preventDefault();\r\n    setFormdata({ ...formdata, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      dispatch({ type: 'AUTH', data: { result, token } });\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const googleFailure = (error) => {\r\n    console.log(error);\r\n    console.log('Google sign in was unsuccessful');\r\n  };\r\n\r\n  const switchMode = () => {\r\n    setIsSignup(!isSignup);\r\n    setShowPassword(false);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup ? 'Sign up' : 'Sign in'}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? 'text' : 'password'}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Repeat password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? 'Sign Up' : 'Sign In'}\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"427947890125-c6ik35t8poj23mchm1tad4k5h6fdivoa.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button\r\n                className={classes.googleButton}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                startIcon={<Icon />}\r\n                variant=\"contained\"\r\n              >\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup\r\n                  ? 'Already have an account? Sign In'\r\n                  : 'Create an account, Sign Up'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}